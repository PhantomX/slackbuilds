#X Inc SlackBuilds

Here are some of my SlackBuilds for Slackware.

###########################################################################
This repository don't have support in any way and it will no longer be
maintained.
###########################################################################

###########################################################################
Before use, remember that YOU ARE AT YOUR OWN RISK! Don't blame me if your
system explodes or suffer any other bad things.
###########################################################################


> If you want use one of them, fakeroot package installed is recommended (you can
find it in linuxpackages.net or use the SlackBuild from here). With that, it's
possible to run the SlackBuilds as normal user. Creating a user only for this
task is very important too. This is the only tested method.

> Build as user without fakeroot is NOT supported, you will waste your time.

> slack-required files do not show true requirements, it is used more as reference
than speak the truth. :)

> Default /bin/sh in Slackware (and mine) is bash, all of SlackBuilds from here have bashisms
and this will never be fixed by me.

> The "exit 1" are in for a reason, do not remove them! If a SB do not finish correctly,
try to figure out the problem.

> ARCH defaults to x86_64. I do not testing x86 outside multilib support, but it should work.

> SlackBuilds are tested on my own production PC, with a unclean slackware64-current
environment. Don't expect much of them.

> Some download links are broken, so, if this happens, you may search source files by yourself.

> Extra build requirements (all Slackware series "d" is mandatory) needed to run
some SBs (if not installed, the script will die):
  - cabextract
  - chrpath
  - cvs
  - desktop-file-utils
  - dos2unix
  - git
  - icoutils
  - imagemagick (convert tool mostly)
  - jam
  - librsvg
  - links
  - lynx
  - lzip
  - mercurial
  - ninja
  - p7zip
  - patchutils
  - scons
  - subversion
  - wget

> Some SlackBuilds have switches to turn on/off specific functions (tests, features).
See general variables too, like PKGFORMAT, that sets package format. See SWITCHES file.

> Some SlackBuilds are placed in subdirectories (eg.: perl-modules or gnome), so use
"find . -type d |grep -i <string>" to search for them.

> If you are using default qt package from Slackware, make a link qmake-qt4:
  ln -s qmake /usr/bin/qmake-qt4
Updated SlackBuilds do not need this, edit qt4.options and uncomment some lines
to enable compatibility (same with KDE.options).

> The BUILD variable is not always bumped in rebuilds (i.e: for dependency library soname bump).

> See REPLACEMENTS file.

> *-compat32 are multilib SlackBuilds (mostly used for wine), only for 64-bit
Slackware. Proper toolchain packages are needed, so start with Eric Hameleers
packages[1] for that.

> If you can not find a SlackBuild that existed before, see _pasture/README.

> "From stock" (for patches, mainly) means "retrieved from Slackware upstream".

> To retrieve a single directory, try svn
  svn export https://github.com/PhantomX/slackbuilds/trunk/${directory}

> I like to thanks Martijn Dekker from linuxpackages.net[2] for fakeroot procedures 
for use in SlackBuilds and Slackware packages, joost witteveen, Clint Adams and
Timo Savola for the great fakeroot[3], Arch[4], Debian[5], Fedora[6], Gentoo[7] \
developers for some patches and install procedures and, of course, The Slackware
Linux Project[8] for all.

* Most of patches and slack-descs descriptions are retrieved from this projects.

> See the projects websites from more info on trademarks or other things.

[1] http://connie.slackware.com/~alien/multilib/
[2] http://www.linuxpackages.net/
[3] http://fakeroot.alioth.debian.org/fakeroot
[4] http://www.archlinux.org/
[5] http://www.debian.org/
[6] http://fedoraproject.org/wiki/
[7] http://www.gentoo.org/
[8] http://www.slackware.com/



Donations: [PayPal](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=DEJCLTQV3N2L2)
